{"version":3,"sources":["aggregates/navigation/verbs/events.js","aggregates/navigation/verbs/public.js","aggregates/navigation/verbs/commands.js","aggregates/navigation/handlers/commands.js","aggregates/navigation/handlers/events.js","aggregates/navigation/commandCreators.js","aggregates/navigation/ui/containers/navbar.js","aggregates/navigation/ui/containers/breadcrumbs.js","aggregates/navigation/index.js","aggregates/products/verbs/commands.js","aggregates/products/commandCreators.js","aggregates/products/verbs/events.js","aggregates/products/api/data.js","aggregates/products/handlers/commands.js","aggregates/products/api/mockApi.js","aggregates/products/handlers/events.js","aggregates/products/ui/components/addToCartButton.js","aggregates/products/ui/containers/productList.js","aggregates/products/ui/containers/productDetails.js","aggregates/products/ui/components/disclaimer.js","aggregates/products/index.js","aggregates/shoppingCart/verbs/events.js","aggregates/shoppingCart/verbs/public.js","aggregates/shoppingCart/verbs/commands.js","aggregates/shoppingCart/handlers/commands.js","aggregates/shoppingCart/api/mockApi.js","aggregates/shoppingCart/handlers/events.js","aggregates/shoppingCart/ui/containers/headerShoppingCartDropdown.js","aggregates/shoppingCart/commandCreators.js","aggregates/shoppingCart/ui/containers/checkout.js","aggregates/shoppingCart/index.js","aggregates/session/verbs/events.js","aggregates/session/verbs/public.js","aggregates/session/verbs/commands.js","aggregates/session/api/mockApi.js","aggregates/session/handlers/commands.js","aggregates/session/handlers/events.js","aggregates/session/commandCreators.js","aggregates/session/ui/containers/loginModal.js","aggregates/session/index.js","App.js","serviceWorker.js","subwayUtils/utils.js","index.js"],"names":["Events","PublicCommands","Commands","cmdHandlers","command","handler","triggerEvents","id","evtHandlers","state","updateState","selectedProductName","currentPage","payload","product","title","selectHomePage","Subway","selectAggregate","AGGREGATE_NAME","Navbar","shoppingCartMenuItem","useReactToEvent","NAVIGATION_AGGREGATE_NAME","userLogged","username","useObserveAggregateState","aggregateState","Menu","size","borderless","fixed","Container","Item","Header","color","position","Button","onClick","publicChannel","style","marginLeft","basic","Popup","on","trigger","icon","Icon","name","Content","padding","List","Divider","selection","verticalAlign","Breadcrumbs","Grid","relaxed","columns","Column","Breadcrumb","Section","active","link","textAlign","content","labelPosition","aggregateConfig","initialState","bootstrap","reactToCommand","triggerAddToShoppingCart","data","img","price","newPrice","ccy","rating","reviewsCount","a","async","Promise","resolve","reject","setTimeout","reverse","productsList","selectedProduct","AddToCartButton","useState","loading","setLoading","fluid","ProductList","detailsButtonHoveredId","setDetailsButtonHoveredId","PRODUCTS_AGGREGATE_NAME","productList","map","key","Card","Image","label","as","corner","Dimmer","Dimmable","backgroundColor","onMouseOver","onMouseLeave","dimmed","src","wrapped","productAggregate","selectProductForDetails","Meta","Rating","disabled","defaultRating","maxRating","Description","Label","tag","extra","ProductDetails","Segment","Group","horizontal","padded","compact","i","messages","Disclaimer","visible","setVisible","useEffect","Transition","animation","duration","Message","onDismiss","zIndex","bottom","right","width","header","list","SUBMIT_ORDER","items","status","orderSubmissionResult","events","concat","successful","has","prod","get","set","count","checkoutSuccessful","Map","HeaderShoppingCartDropdown","SHOPPING_CART_AGGREGATE_NAME","cartItems","Array","from","item","itemsTotal","reduce","acc","curr","length","Subheader","divided","circular","className","toFixed","Checkout","checkoutCompleted","setCheckoutCompleted","shoppingMap","orderSuccessful","totalCurrency","total","marginTop","Table","Row","HeaderCell","Body","Cell","ribbon","textDecoration","positive","Footer","attached","floated","animated","hidden","warning","FAKE_ACCOUNT","authenticate","password","jwt","message","rejectCommand","MockAPI","authenticationResult","loginModalVisible","show","broadcastEvent","userLoggedIn","hideLoginScreen","simulateLogin","onRejected","LoginModal","authInProgress","setAuthInProgress","wrongCredentials","setWrongCredentials","isLoginModalVisible","Modal","open","dimmer","onClose","Form","Field","Input","value","type","Actions","reasonString","meta","App","background","Boolean","window","location","hostname","match","aggregates","sessionAggregateConfig","productAggregateConfig","navigationAggregateConfig","shoppingCartAggregateConfig","forEach","aggregate","onError","reactToEvent","initHandlers","createAggregate","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.511be4cc.chunk.js","sourcesContent":["export const Events = {\n  PRODUCT_PAGE_SELECTED: \"PRODUCT_PAGE_SELECTED\",\n  HOME_PAGE_SELECTED: \"HOME_PAGE_SELECTED\",\n  CHECKOUT_PAGE_REQUEST_SUBMITTED: \"CHECKOUT_PAGE_REQUEST_SUBMITTED\"\n};\n","export const PublicCommands = {\n  NAVIGATE_TO_PRODUCT_DETAILS: \"NAVIGATE_TO_PRODUCT_DETAILS\",\n  NAVIGATE_TO_CHECKOUT_PAGE: \"NAVIGATE_TO_CHECKOUT_PAGE\"\n};\n","export const Commands = {\n  SELECT_HOME_PAGE: \"SELECT_HOME_PAGE\"\n};\n","import { Commands } from \"../verbs/commands\";\nimport { Events } from \"../verbs/events\";\n\nexport const cmdSelectHomePageHandler = {\n  command: Commands.SELECT_HOME_PAGE,\n  handler: ({}, { triggerEvents }) =>\n    triggerEvents([{ id: Events.HOME_PAGE_SELECTED }])\n};\n\n\nexport const cmdHandlers = [\n  cmdSelectHomePageHandler,\n];\n","import { Events } from \"../verbs/events\";\n\nexport const evtHomePageSelectedHandler = {\n  command: Events.HOME_PAGE_SELECTED,\n  handler: ({ state }, { updateState }) => {\n    updateState({\n      ...state,\n      selectedProductName: null,\n      currentPage: \"home\"\n    })\n  }\n};\n\nexport const evtProductPageSelectedHandler = {\n  command: Events.PRODUCT_PAGE_SELECTED,\n  handler: ({ state, payload }, { updateState }) => {\n    updateState({\n      ...state,\n      selectedProductName: payload.product.title,\n      currentPage: \"product\"\n    })\n  }\n};\n\nexport const evtCheckoutPageRequestSubmittedHandler = {\n  command: Events.CHECKOUT_PAGE_REQUEST_SUBMITTED,\n  handler: ({ state }, { updateState }) => {\n    updateState({\n      ...state,\n      selectedProductName: null,\n      currentPage: \"checkout\"\n    })\n  }\n};\n\nexport const evtHandlers = [\n  evtHomePageSelectedHandler,\n  evtProductPageSelectedHandler,\n  evtCheckoutPageRequestSubmittedHandler\n];\n","import { AGGREGATE_NAME } from \"./index\";\nimport { Commands } from \"./verbs/commands\";\nimport { Subway } from \"@subway-js/subway-react\";\n\nexport const selectHomePage = () => {\n  Subway.selectAggregate(AGGREGATE_NAME).command(Commands.SELECT_HOME_PAGE);\n};\n\nexport const showLoginScreen = () => {\n  Subway.selectAggregate(AGGREGATE_NAME).publicChannel().command(\"SHOW_LOGIN_MODAL\");\n};\n\nexport const logout = () => {\n  Subway.selectAggregate(AGGREGATE_NAME).publicChannel().command(\n    \"PERFORM_USER_LOGOUT\"\n  );\n};\n","import React from \"react\";\nimport {\n  Container,\n  Menu,\n  Header,\n  Button,\n  Popup,\n  List,\n  Icon,\n  Divider\n} from \"semantic-ui-react\";\nimport { useObserveAggregateState, useReactToEvent } from \"@subway-js/subway-react\";\nimport { showLoginScreen, logout } from \"../../commandCreators\";\n\nimport { AGGREGATE_NAME as NAVIGATION_AGGREGATE_NAME } from \"../../\";\n\nexport function Navbar({ shoppingCartMenuItem }) {\n\n  const [userLoggedInPayload] =\n    useReactToEvent(\n      NAVIGATION_AGGREGATE_NAME,\n      \"SESSION_STATUS_UPDATED\",\n      payload => payload\n      );\n\n  const { userLogged, username } = userLoggedInPayload || {};\n\n  const [currentPage] = useObserveAggregateState(\n    NAVIGATION_AGGREGATE_NAME,\n    aggregateState => aggregateState.currentPage\n  );\n\n  return (\n    <Menu size=\"small\" borderless fixed=\"top\">\n      <Container>\n        <Menu.Item>\n          <Header color=\"teal\">SubwayJS eComm</Header>\n        </Menu.Item>\n\n        {currentPage !== \"checkout\" && (\n          <Menu.Item position=\"right\">\n            {shoppingCartMenuItem}\n            {!userLogged && (\n              <Button\n                onClick={() => showLoginScreen()}\n                style={{ marginLeft: 10 }}\n                color=\"teal\"\n                basic\n              >\n                {\" \"}\n                Log-in\n              </Button>\n            )}\n            {userLogged && (\n              <Popup\n                on=\"click\"\n                position=\"bottom right\"\n                trigger={\n                  <Button basic color=\"teal\" icon style={{ marginLeft: 10 }}>\n                    <Icon name=\"user\" />\n                  </Button>\n                }\n              >\n                <Popup.Content style={{ padding: \"0 !important\" }}>\n                  <List.Header>{`Hi, ${username}`} </List.Header>\n                  <Divider />\n                  <List selection verticalAlign=\"middle\">\n                    <List.Item onClick={() => logout()}>Logout</List.Item>\n                  </List>\n                </Popup.Content>\n              </Popup>\n            )}\n          </Menu.Item>\n        )}\n      </Container>\n    </Menu>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Breadcrumb, Button, Grid } from \"semantic-ui-react\";\n\nimport { \n  useObserveAggregateState\n} from \"@subway-js/subway-react\";\n\nimport { selectHomePage } from \"../../commandCreators\";\n\nimport { AGGREGATE_NAME as NAVIGATION_AGGREGATE_NAME } from \"../../\";\n\nexport function Breadcrumbs() {\n\n  const [navigationState] = useObserveAggregateState(NAVIGATION_AGGREGATE_NAME);\n  const { currentPage, selectedProductName } = navigationState || {};\n  return (\n    <Grid relaxed columns={2}>\n      <Grid.Column>\n        <Breadcrumb>\n          {currentPage === \"home\" && (\n            <Breadcrumb.Section active>Products</Breadcrumb.Section>\n          )}\n          {currentPage === \"product\" && selectedProductName && (\n            <>\n              <Breadcrumb.Section active link onClick={() => selectHomePage()}>\n                Products\n              </Breadcrumb.Section>\n              <Breadcrumb.Divider />\n              <Breadcrumb.Section active>\n                {selectedProductName}\n              </Breadcrumb.Section>\n            </>\n          )}\n          {currentPage === \"checkout\" && (\n            <>\n              <Breadcrumb.Section active link onClick={() => selectHomePage()}>\n                Products\n              </Breadcrumb.Section>\n              <Breadcrumb.Divider />\n              <Breadcrumb.Section active>Checkout</Breadcrumb.Section>\n            </>\n          )}\n        </Breadcrumb>\n      </Grid.Column>\n      {(currentPage === \"product\" || currentPage === \"checkout\") && (\n        <Grid.Column textAlign=\"right\">\n          <Button\n            onClick={() => selectHomePage()}\n            size=\"tiny\"\n            content=\"Back to products\"\n            icon=\"angle left\"\n            color=\"teal\"\n            labelPosition=\"left\"\n          />\n        </Grid.Column>\n      )}\n    </Grid>\n  );\n}\n","import { Subway } from \"@subway-js/subway-react\";\n\nimport { Events } from \"./verbs/events\";\nimport { PublicCommands } from \"./verbs/public\";\n\nimport { cmdHandlers } from \"./handlers/commands\";\nimport { evtHandlers } from \"./handlers/events\";\n\nexport { Navbar } from \"./ui/containers/navbar\";\nexport { Breadcrumbs } from \"./ui/containers/breadcrumbs\";\n\nexport const AGGREGATE_NAME = \"NavigationAggregate\";\n\nconst initialState = {\n  currentPage: \"home\"\n};\n\nexport const aggregateConfig = {\n  name: AGGREGATE_NAME,\n  initialState,\n  cmdHandlers,\n  evtHandlers,\n  bootstrap: () => {\n    Subway.selectAggregate(AGGREGATE_NAME)\n      .publicChannel()\n      .reactToCommand(\n        PublicCommands.NAVIGATE_TO_PRODUCT_DETAILS,\n        ({ payload }, { triggerEvents }) => {\n          triggerEvents([\n            {\n              id: Events.PRODUCT_PAGE_SELECTED,\n              payload\n            }\n          ]);\n        }\n      );\n\n    Subway.selectAggregate(AGGREGATE_NAME)\n      .publicChannel()\n      .reactToCommand(\n        PublicCommands.NAVIGATE_TO_CHECKOUT_PAGE,\n        ({ payload }, { triggerEvents }) => {\n          triggerEvents([\n            {\n              id: Events.CHECKOUT_PAGE_REQUEST_SUBMITTED,\n              payload\n            }\n          ]);\n        }\n      );\n  }\n};\n","export const Commands = {\n  LOAD_PRODUCTS_LIST: \"LoadProductsList\",\n};\n","import { AGGREGATE_NAME } from \"./index\";\nimport { Commands } from \"./verbs/commands\";\nimport { Subway } from \"@subway-js/subway-react\";\n\nexport const loadProductsList = () => {\n  Subway.selectAggregate(AGGREGATE_NAME).command(\n    Commands.LOAD_PRODUCTS_LIST\n  );\n};\n\nexport const selectProductForDetails = product => {\n  const productAggregate = Subway.selectAggregate(AGGREGATE_NAME);\n  productAggregate.publicChannel().command(\"NAVIGATE_TO_PRODUCT_DETAILS\", { product });\n  productAggregate.command(\"SELECT_PRODUCT\", { product });\n};\n\nexport const triggerAddToShoppingCart = product => {\n  Subway.selectAggregate(AGGREGATE_NAME).publicChannel().command(\n    \"ADD_TO_SHOPPING_CART\",\n    { product }\n  );\n};\n","export const Events = {\n  PRODUCTS_LIST_LOADED: \"ProductsListLoaded\",\n  PRODUCT_SELECTED_FOR_DETAILS: \"PRODUCT_SELECTED_FOR_DETAILS\"\n};\n","export const data = [\n  {\n    id: 10,\n    img: \"images/products/air-jordan-1-i.jpg\",\n    title: \"Air Jordan I\",\n    price: \"199.00\",\n    newPrice: \"149.99\",\n    ccy: \"$\",\n    rating: \"5\",\n    reviewsCount: 54\n  },\n  {\n    id: 11,\n    img: \"images/products/air-jordan-original-2.jpg\",\n    title: \"Air Jordan II\",\n    price: \"199.00\",\n    newPrice: \"249.00\",\n    ccy: \"$\",\n    rating: \"4\",\n    reviewsCount: 12\n  },\n  {\n    id: 12,\n    img: \"images/products/air-jordan-3.jpg\",\n    title: \"Air Jordan III\",\n    price: \"199.00\",\n    ccy: \"$\",\n    rating: \"4\",\n    reviewsCount: 43\n  },\n  {\n    id: 13,\n    img: \"images/products/air-jordan-4.jpg\",\n    title: \"Air Jordan IV\",\n    price: \"199.00\",\n    ccy: \"$\",\n    rating: \"2\",\n    reviewsCount: 76\n  },\n  {\n    id: 14,\n    img: \"images/products/air-jordan-og-5-fire-red.jpeg\",\n    title: \"Air Jordan V\",\n    price: \"199.00\",\n    ccy: \"$\",\n    rating: \"5\",\n    reviewsCount: 23\n  },\n  {\n    id: 15,\n    img: \"images/products/air-jordan-6.jpg\",\n    title: \"Air Jordan VI\",\n    price: \"199.00\",\n    ccy: \"$\",\n    rating: \"4\",\n    reviewsCount: 54\n  },\n  {\n    id: 16,\n    img: \"images/products/air-jordan-7.jpg\",\n    title: \"Air Jordan VII\",\n    price: \"199.00\",\n    ccy: \"$\",\n    rating: \"2\",\n    reviewsCount: 13\n  },\n  {\n    id: 17,\n    img: \"images/products/air-jordan-8.jpg\",\n    title: \"Air Jordan VII\",\n    price: \"199.00\",\n    ccy: \"$\",\n    rating: \"4\",\n    reviewsCount: 43\n  },\n  {\n    id: 18,\n    img: \"images/products/air-jordan-9.jpg\",\n    title: \"Air Jordan IX\",\n    price: \"199.00\",\n    ccy: \"$\",\n    rating: \"4\",\n    reviewsCount: 55\n  },\n  {\n    id: 19,\n    img: \"images/products/air-jordan-10.jpg\",\n    title: \"Air Jordan X\",\n    price: \"199.00\",\n    ccy: \"$\",\n    rating: \"5\",\n    reviewsCount: 12\n  },\n  {\n    id: 20,\n    img: \"images/products/air-jordan-11.jpg\",\n    title: \"Air Jordan XI\",\n    price: \"199.00\",\n    newPrice: \"149.00\",\n    ccy: \"$\",\n    rating: \"5\",\n    reviewsCount: 23\n  },\n  {\n    id: 21,\n    img: \"images/products/air-jordan-12.jpg\",\n    title: \"Air Jordan XII\",\n    price: \"199.00\",\n    newPrice: \"149.00\",\n    ccy: \"$\",\n    rating: \"5\",\n    reviewsCount: 132\n  }\n];\n","import { Commands } from \"../verbs/commands\";\nimport { Events } from \"../verbs/events\";\n\nimport * as MockAPI from \"../api/mockApi\";\n\nexport const cmdLoadProductsListHandler = {\n  command: Commands.LOAD_PRODUCTS_LIST,\n  handler: async ({ state, payload }, { triggerEvents }) => {\n    const productsList = await MockAPI.getProductsList();\n    triggerEvents([{ id: Events.PRODUCTS_LIST_LOADED, payload: { productsList } }])\n  }\n};\n\nexport const cmdSelectProductForDetailsHandler = {\n  command: \"SELECT_PRODUCT\",\n  handler: ({ state, payload }, { triggerEvents }) => {\n    triggerEvents([\n      {\n        id: Events.PRODUCT_SELECTED_FOR_DETAILS,\n        payload: { product: payload.product }\n      }\n    ])\n  }\n};\n\nexport const cmdHandlers = [\n  cmdLoadProductsListHandler,\n  cmdSelectProductForDetailsHandler\n];\n","import { data } from \"./data\";\n\nconst RPC_FAKE_DELAY = 500;\nexport const getProductsList = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(data.reverse());\n    }, RPC_FAKE_DELAY);\n  });\n};\n","import { Events } from \"../verbs/events\";\n\nexport const evtProductsListLoadedHandler = {\n  command: Events.PRODUCTS_LIST_LOADED,\n  handler: ({ state, payload = {} }, { updateState }) => {\n    const { productsList } = payload;\n    updateState({\n      ...state,\n      productsList\n    })\n  }\n};\n\n// TODO review communication messaging logic\nexport const evtProductSelectedForDetailsHandler = {\n  command: Events.PRODUCT_SELECTED_FOR_DETAILS,\n  handler: ({ state, payload = {} }, { updateState }) => {\n    const { product } = payload;\n    updateState({\n      ...state,\n      selectedProduct: product\n    })\n  }\n};\n\nexport const evtHandlers = [\n  evtProductsListLoadedHandler,\n  evtProductSelectedForDetailsHandler\n];\n","import React, { useState } from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nexport function AddToCartButton({ product, size, onClick }) {\n  const [loading, setLoading] = useState(false);\n  return (\n    <Button\n      size={size}\n      fluid\n      loading={loading}\n      color=\"teal\"\n      onClick={() => {\n        setLoading(true);\n        setTimeout(() => {\n          onClick(product);\n          setLoading(false);\n        }, 500);\n      }}\n    >\n      <Button.Content>\n        <Icon name=\"shop\" /> Add to cart\n      </Button.Content>\n    </Button>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  Image,\n  Label,\n  Icon,\n  Card,\n  Rating,\n  Button,\n  Dimmer\n} from \"semantic-ui-react\";\n\nimport { useObserveAggregateState } from \"@subway-js/subway-react\";\n\nimport { AGGREGATE_NAME as PRODUCTS_AGGREGATE_NAME } from \"../../\";\n\nimport {\n  selectProductForDetails,\n  triggerAddToShoppingCart\n} from \"../../commandCreators\";\n\nimport { AddToCartButton } from \"../components/addToCartButton\";\n\nexport function ProductList() {\n  const [detailsButtonHoveredId, setDetailsButtonHoveredId] = useState(null);\n\n  const [productList] = useObserveAggregateState(\n    PRODUCTS_AGGREGATE_NAME,\n    aggregateState => aggregateState.productsList\n  );\n\n  return (\n    <Grid columns={3}>\n      {productList &&\n        productList.map(product => {\n          const {\n            id,\n            img,\n            title,\n            price,\n            rating,\n            reviewsCount,\n            newPrice = null,\n            ccy\n          } = product;\n          return (\n            <Grid.Column key={id}>\n              <Card>\n                {newPrice && (\n                  <Image\n                    fluid\n                    label={{\n                      as: \"a\",\n                      color: \"orange\",\n                      corner: \"left\",\n                      icon: \"star\"\n                    }}\n                  />\n                )}\n                <Dimmer.Dimmable\n                  style={{ padding: 40, backgroundColor: \"white\" }}\n                  as={Image}\n                  onMouseOver={() => {\n                    setDetailsButtonHoveredId(id);\n                  }}\n                  onMouseLeave={() => {\n                    setDetailsButtonHoveredId(null);\n                  }}\n                  dimmed={detailsButtonHoveredId === id}\n                >\n                  <Image src={img} wrapped />\n\n                  <Dimmer active={detailsButtonHoveredId === id}>\n                    <Button\n                      basic\n                      size=\"small\"\n                      color=\"teal\"\n                      onClick={() => selectProductForDetails(product)}\n                    >\n                      <Button.Content>\n                        <Icon name=\"magnify\" /> Product details\n                      </Button.Content>\n                    </Button>\n                  </Dimmer>\n                </Dimmer.Dimmable>\n                <Card.Content>\n                  <Card.Header as=\"a\">{title}</Card.Header>\n                  <Card.Meta>\n                    <Rating\n                      size=\"mini\"\n                      disabled\n                      icon=\"star\"\n                      defaultRating={rating}\n                      maxRating={5}\n                    />{\" \"}\n                    {reviewsCount} Reviews\n                  </Card.Meta>\n                  {newPrice && (\n                    <>\n                      <Card.Description>\n                        <strike>\n                          {ccy}\n                          {price}\n                        </strike>{\" \"}\n                        <Icon name=\"arrow right\" />{\" \"}\n                        <Label as=\"span\" color=\"orange\" tag>\n                          {ccy}\n                          {newPrice}\n                        </Label>\n                      </Card.Description>\n                    </>\n                  )}\n                  {!newPrice && (\n                    <Card.Description>\n                      {ccy}\n                      {price}{\" \"}\n                    </Card.Description>\n                  )}\n                </Card.Content>\n                <Card.Content extra>\n                  <AddToCartButton\n                    size=\"small\"\n                    product={product}\n                    onClick={triggerAddToShoppingCart}\n                  />\n                  {\n                    // <Button size=\"small\" fluid color=\"teal\">\n                    //   <Button.Content>\n                    //     <Icon name=\"shop\" /> Add to cart\n                    //   </Button.Content>\n                    // </Button>\n                  }\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          );\n        })}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport {\n  Segment,\n  Image,\n  Header,\n  Container,\n  Rating,\n  Divider,\n  Icon,\n  Label\n} from \"semantic-ui-react\";\n\nimport { AGGREGATE_NAME as PRODUCTS_AGGREGATE_NAME } from \"../../\";\n\nimport { useObserveAggregateState } from \"@subway-js/subway-react\";\nimport { AddToCartButton } from \"../components/addToCartButton\";\nimport { triggerAddToShoppingCart } from \"../../commandCreators\";\n\nexport function ProductDetails() {\n  const [product] = useObserveAggregateState(\n    PRODUCTS_AGGREGATE_NAME,\n    aggregateState => aggregateState.selectedProduct\n  );\n\n  return (\n    <>\n      {\" \"}\n      {product && (\n        <Segment.Group horizontal>\n          <Segment padded=\"very\">\n            <Image src={product.img} wrapped />\n\n            <Segment.Group horizontal compact>\n              {[1, 2, 3].map(i => (\n                <Segment key={i} basic>\n                  <Image src={product.img} size=\"tiny\" />\n                </Segment>\n              ))}\n            </Segment.Group>\n          </Segment>\n          <Segment>\n            <Header size=\"huge\">\n              {product.title}{\" \"}\n              {product.newPrice && (\n                <Label as=\"span\" color=\"orange\" tag>\n                  ON SALE\n                </Label>\n              )}\n            </Header>\n            <Container>\n              <Rating\n                disabled\n                icon=\"star\"\n                defaultRating={product.rating}\n                maxRating={5}\n              />{\" \"}\n              {product.reviewsCount} Reviews\n            </Container>\n            <br />\n            <Container>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </Container>\n\n            <br />\n\n            {product.newPrice && (\n              <>\n                <Label as=\"span\" color=\"grey\" basic size=\"huge\">\n                  <strike>\n                    {product.ccy}\n                    {product.price}\n                  </strike>\n                </Label>\n                <Icon name=\"arrow right\" size=\"big\" />\n                <Label as=\"span\" color=\"orange\" size=\"huge\">\n                  {product.ccy}\n                  {product.newPrice}\n                </Label>\n              </>\n            )}\n            {!product.newPrice && (\n              <Header size=\"huge\">\n                {product.ccy}\n                {product.price}\n              </Header>\n            )}\n\n            <Divider />\n            <AddToCartButton\n              size=\"huge\"\n              product={product}\n              onClick={triggerAddToShoppingCart}\n            />\n            {\n              // <Button size=\"huge\" fluid color=\"teal\">\n              //   <Button.Content>\n              //     <Icon name=\"shop\" /> Add to cart\n              //   </Button.Content>\n              // </Button>\n            }\n          </Segment>\n        </Segment.Group>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Message, Transition } from \"semantic-ui-react\";\n\nconst messages = [\n  \"This is NOT a real ecommerce\",\n  \"Prices and ratings are not real\",\n  \"All product and company names are trademarks™ or registered® trademarks of their respective holders. Use of them does not imply any affiliation with or endorsement by them.\"\n];\n\nexport function Disclaimer() {\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setVisible(true);\n    }, 4000);\n  }, []);\n\n  const handleDismiss = () => {\n    setVisible(false);\n  };\n\n  return (\n    <Transition visible={visible} animation=\"fade up\" duration={500}>\n      <Message\n        color=\"teal\"\n        size=\"tiny\"\n        onDismiss={handleDismiss}\n        style={{\n          position: \"fixed\",\n          zIndex: 10,\n          bottom: 0,\n          right: 0,\n          width: \"100%\"\n        }}\n        header=\"Disclaimer\"\n        list={messages}\n      />\n    </Transition>\n  );\n}\n","import { loadProductsList } from \"./commandCreators\";\n\nimport { cmdHandlers } from \"./handlers/commands\";\nimport { evtHandlers } from \"./handlers/events\";\n\nexport const AGGREGATE_NAME = \"ProductsAggregate\";\nconst initialState = {\n  productsList: [],\n  selectedProduct: null\n};\n\nexport { ProductList } from \"./ui/containers/productList\";\nexport { ProductDetails } from \"./ui/containers/productDetails\";\nexport { Disclaimer } from \"./ui/components/disclaimer\";\n\nexport const aggregateConfig = {\n  name: AGGREGATE_NAME,\n  initialState,\n  cmdHandlers,\n  evtHandlers,\n  bootstrap: () => loadProductsList()\n};\n","export const Events = {\n  PRODUCT_ADDED_TO_CART: \"PRODUCT_ADDED_TO_CART\",\n  ORDER_PROCESSED: \"ORDER_PROCESSED\"\n};\n","export const PublicCommands = {\n  ADD_TO_SHOPPING_CART: \"ADD_TO_SHOPPING_CART\",\n};\n","export const Commands = {\n  SUBMIT_ORDER: \"SUBMIT_ORDER\"\n};\n","import { Commands } from \"../verbs/commands\";\nimport { Events } from \"../verbs/events\";\nimport * as MockAPI from \"../api/mockApi\";\n\nexport const cmdSubmitOrderHandler = {\n  command: Commands.SUBMIT_ORDER,\n  handler: async ({ state, payload }, { triggerEvents }) => {\n    const { items } = payload;\n    const orderSubmissionResult = await MockAPI.submitSuccessfulOrder(items);\n    let events = [];\n    const { status } = orderSubmissionResult;\n    if (status === \"ok\") {\n      events = events.concat([\n        {\n          id: Events.ORDER_PROCESSED,\n          payload: { successful: true, items }\n        }\n      ]);\n    }\n\n    triggerEvents(events);\n  }\n};\n\nexport const cmdHandlers = [cmdSubmitOrderHandler];\n","const RPC_FAKE_DELAY = 1000;\nexport const submitSuccessfulOrder = items => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve({ status: \"ok\" });\n    }, RPC_FAKE_DELAY);\n  });\n};\n","import { Events } from \"../verbs/events\";\n\nexport const evtProductAddedToCartHandler = {\n  command: Events.PRODUCT_ADDED_TO_CART,\n  handler: ({ state, payload }, { updateState }) => {\n    const { product } = payload;\n    // TODO change to add products count and total\n    // const items = state.items.concat(product);\n\n    const { items } = state;\n    if (items.has(product.id)) {\n      const prod = items.get(product.id);\n      items.set(product.id, { ...product, count: prod.count + 1 });\n    } else {\n      items.set(product.id, { ...product, count: 1 });\n    }\n    updateState({\n        ...state,\n        items,\n        checkoutSuccessful: false\n      })\n  }\n};\n\nexport const evtOrderProcessedHandler = {\n  command: Events.ORDER_PROCESSED,\n  handler: ({ state, payload }, { updateState }) => {\n    const { successful } = payload;\n    // TODO check successful = fakse\n    updateState({\n        checkoutSuccessful: successful,\n        items: new Map()\n      })\n  }\n};\n\nexport const evtHandlers = [\n  evtProductAddedToCartHandler,\n  evtOrderProcessedHandler\n];\n","import React from \"react\";\nimport {\n  Button,\n  Popup,\n  Header,\n  Icon,\n  Segment,\n  Item,\n  Label\n} from \"semantic-ui-react\";\nimport { AGGREGATE_NAME as SHOPPING_CART_AGGREGATE_NAME } from \"../../\";\nimport { useObserveAggregateState } from \"@subway-js/subway-react\";\nimport { goToCheckout } from \"../../commandCreators\";\n\nexport function HeaderShoppingCartDropdown({ size }) {\n  const [shoppingData] = useObserveAggregateState(\n    SHOPPING_CART_AGGREGATE_NAME,\n    aggregateState => aggregateState || {}\n  );\n  const { items = new Map() } = shoppingData || {};\n  const cartItems = Array.from(items).map(item => ({ ...item[1] }));\n  const itemsTotal = cartItems.reduce((acc, curr) => +acc + +curr.count, 0);\n  return (\n    <Popup\n      on=\"click\"\n      position=\"bottom right\"\n      trigger={\n        <Button color=\"teal\" icon>\n          <Icon name=\"shopping cart\" />\n          {itemsTotal > 0 && `    (${itemsTotal})`}\n        </Button>\n      }\n    >\n      <Popup.Content>\n        {(!cartItems || cartItems.length === 0) && (\n          <Segment basic textAlign=\"center\">\n            <Icon name=\"frown outline\" size=\"big\" color=\"teal\" />\n            <Header size=\"tiny\">\n              <Header.Subheader>Your shopping cart is empty</Header.Subheader>\n            </Header>\n          </Segment>\n        )}\n        {cartItems && cartItems.length > 0 && (\n          <Item.Group divided>\n            {cartItems.map(\n              ({ id, img, title, price, newPrice, ccy, count }) => (\n                <Item key={id}>\n                  <Item.Image size=\"mini\" src={img} />\n\n                  <Item.Content>\n                    <Item.Description>\n                      {count && count > 1 && (\n                        <Label circular size=\"tiny\" color=\"black\">\n                          x{count}\n                        </Label>\n                      )}{\" \"}\n                      {title}\n                    </Item.Description>\n                    <Item.Meta>\n                      <span className=\"price\">\n                        {ccy}\n                        {(newPrice || price) * count}\n                      </span>\n                    </Item.Meta>\n                  </Item.Content>\n                </Item>\n              )\n            )}\n            <Item>\n              <Item.Header as=\"h4\">\n                Total: {cartItems[0].ccy}{\" \"}\n                {cartItems\n                  .reduce(\n                    (acc, curr) =>\n                      +acc + +((curr.newPrice || curr.price) * curr.count),\n                    0\n                  )\n                  .toFixed(2)}\n              </Item.Header>\n            </Item>\n\n            <Item>\n              <Item.Content>\n                <Button fluid color=\"teal\" onClick={() => goToCheckout()}>\n                  Checkout\n                </Button>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        )}\n      </Popup.Content>\n    </Popup>\n  );\n}\n","import { AGGREGATE_NAME } from \"./index\";\nimport { Commands } from \"./verbs/commands\";\nimport { Subway } from \"@subway-js/subway-react\";\n\nexport const addProductToCart = product => {\n  Subway.selectAggregate(AGGREGATE_NAME).command(\n    Commands.ADD_PRODUCT_TO_CART,\n    { product }\n  );\n};\n\nexport const goToCheckout = product => {\n  Subway.selectAggregate(AGGREGATE_NAME).publicChannel().command(\n    \"NAVIGATE_TO_CHECKOUT_PAGE\"\n  );\n};\n\nexport const showLoginScreen = () => {\n  Subway.selectAggregate(AGGREGATE_NAME).publicChannel().command(\"SHOW_LOGIN_MODAL\");\n};\n\nexport const submitSuccessfulOrder = items => {\n  Subway.selectAggregate(AGGREGATE_NAME).command(Commands.SUBMIT_ORDER, {\n    items\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Label,\n  Header,\n  Message,\n  Button,\n  Icon,\n  Image\n} from \"semantic-ui-react\";\n\nimport { AGGREGATE_NAME as SHOPPING_CART_AGGREGATE_NAME } from \"../../\";\nimport {\n  useObserveAggregateState,\n  useReactToEvent\n} from \"@subway-js/subway-react\";\nimport { showLoginScreen, submitSuccessfulOrder } from \"../../commandCreators\";\n\nexport function Checkout() {\n  const [loading, setLoading] = useState(false);\n  const [checkoutCompleted, setCheckoutCompleted] = useState(false);\n  const [state] = useObserveAggregateState(SHOPPING_CART_AGGREGATE_NAME);\n  const {\n    items: shoppingMap = [],\n    checkoutSuccessful: orderSuccessful = false\n  } = state ? state : {};\n\n  const [userLoggedInPayload] = useReactToEvent(SHOPPING_CART_AGGREGATE_NAME, \"SESSION_STATUS_UPDATED\");\n  const { userLogged, username } = userLoggedInPayload || {};\n\n  useEffect(() => {\n    setCheckoutCompleted(orderSuccessful);\n    setLoading(false);\n  }, [orderSuccessful]);\n\n  const list = Array.from(shoppingMap || []).map(item => ({ ...item[1] }));\n  const totalCurrency = list[0] ? list[0].ccy : null;\n  const count = list.reduce((acc, curr) => +acc + +curr.count, 0);\n  const total = list\n    .reduce(\n      (acc, curr) => +acc + +((curr.newPrice || curr.price) * curr.count),\n      0\n    )\n    .toFixed(2);\n\n  if (!loading && checkoutCompleted) {\n    return (\n      <Header\n        color=\"teal\"\n        style={{ marginTop: 100 }}\n        as=\"h2\"\n        icon\n        textAlign=\"center\"\n      >\n        <Icon name=\"winner\" />\n        Order processed successfully!\n        <Header.Subheader>\n          Thanks {username}! You will receive your products tomorrow!\n        </Header.Subheader>\n      </Header>\n    );\n  }\n  return (\n    <>\n      <div>{loading}</div>\n      <Table columns={4} color=\"teal\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell width={5}>PRODUCT</Table.HeaderCell>\n            <Table.HeaderCell textAlign=\"center\">QUANTITY</Table.HeaderCell>\n            <Table.HeaderCell width={5} textAlign=\"center\">\n              UNIT PRICE\n            </Table.HeaderCell>\n            <Table.HeaderCell width={5} textAlign=\"right\">\n              TOTAL\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {list.map(({ id, title, count, newPrice, price, ccy, img }) => (\n            <Table.Row key={id}>\n              <Table.Cell>\n                {newPrice && (\n                  <Label color=\"orange\" size=\"mini\" ribbon>\n                    OFFER!\n                  </Label>\n                )}\n                {title} <Image src={img} size=\"mini\" />\n              </Table.Cell>\n\n              <Table.Cell textAlign=\"center\"> {count}</Table.Cell>\n              <Table.Cell textAlign=\"center\">\n                <Header as=\"h5\">\n                  <Header.Content>\n                    {newPrice || price} {ccy}\n                    {newPrice && (\n                      <Header.Subheader\n                        style={{ textDecoration: \"line-through\" }}\n                      >\n                        {price} {ccy}\n                      </Header.Subheader>\n                    )}\n                  </Header.Content>\n                </Header>\n              </Table.Cell>\n              <Table.Cell positive textAlign=\"right\">\n                <Header as=\"h4\">\n                  <Header.Content>\n                    {((newPrice || price) * count).toFixed(2)} {ccy}\n                  </Header.Content>\n                </Header>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell />\n            <Table.HeaderCell textAlign=\"center\">\n              {count} articles\n            </Table.HeaderCell>\n            <Table.HeaderCell />\n            <Table.HeaderCell positive textAlign=\"right\">\n              {total} {totalCurrency}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n\n      <Message color=\"teal\" attached>\n        <Header as=\"h4\">\n          {username\n            ? `Hi ${username}, you can buy in one click!`\n            : \"Buy in one click\"}\n          <Header.Subheader>\n            Pay with your default paying method and receive tomorrow at your\n            home address.\n          </Header.Subheader>\n        </Header>\n        <br />\n\n        {!checkoutCompleted && !loading && userLogged && (\n          <Button\n            color=\"orange\"\n            floated=\"right\"\n            onClick={() => {\n              setLoading(true);\n              submitSuccessfulOrder(list);\n            }}\n          >\n            Buy in 1-click!\n          </Button>\n        )}\n        {!checkoutCompleted && !loading && !userLogged && (\n          <Button\n            animated=\"fade\"\n            color=\"teal\"\n            floated=\"right\"\n            onClick={() => showLoginScreen()}\n          >\n            <Button.Content visible>Buy in 1-click!</Button.Content>\n            <Button.Content hidden>Login first</Button.Content>\n          </Button>\n        )}\n        {!checkoutCompleted && loading && (\n          <Button color=\"orange\" disabled floated=\"right\" loading>\n            Buy in 1-click!\n          </Button>\n        )}\n        {!loading && checkoutCompleted && \"FINALIZED\"}\n\n        <br />\n        <br />\n      </Message>\n      {!userLogged && (\n        <Message attached=\"bottom\" warning>\n          <Icon name=\"info\" />\n          If you are not logged in, we will ask for your credentials before\n          proceeding with the order\n        </Message>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Subway } from \"@subway-js/subway-react\";\n\n// import { addProductToCart } from \"./commandCreators\";\nimport { Events } from \"./verbs/events\";\nimport { PublicCommands } from \"./verbs/public\";\n\nimport { cmdHandlers } from \"./handlers/commands\";\nimport { evtHandlers } from \"./handlers/events\";\n\nexport const AGGREGATE_NAME = \"ShoppingCartAggregate\";\n\nexport {\n  HeaderShoppingCartDropdown\n} from \"./ui/containers/headerShoppingCartDropdown\";\nexport { Checkout } from \"./ui/containers/checkout\";\n\nexport const aggregateConfig = {\n  name: AGGREGATE_NAME,\n  initialState: { checkoutSuccessful: null, items: new Map() },\n  cmdHandlers,\n  evtHandlers,\n  bootstrap: () => {\n  \n    Subway.selectAggregate(AGGREGATE_NAME).publicChannel().reactToCommand(\n      PublicCommands.ADD_TO_SHOPPING_CART,\n      ({ payload }, { triggerEvents }) => {\n        triggerEvents([\n            {\n              id: Events.PRODUCT_ADDED_TO_CART,\n              payload\n            }\n          ])\n      }\n    );\n  }\n};\n","export const Events = {\n  LOGIN_MODAL_VISIBILITY_UPDATED: \"LOGIN_MODAL_VISIBILITY_UPDATED\",\n  LOGIN_MODAL_REQUESTED: \"LOGIN_MODAL_REQUESTED\",\n  LOGOUT_USER_REQUESTED: \"LOGOUT_USER_REQUESTED\",\n  USER_LOGGED_OUT: \"USER_LOGGED_OUT\",\n  USER_SUCCESSFULLY_AUTHENTICATED: \"USER_SUCCESSFULLY_AUTHENTICATED\",\n  SESSION_STATUS_UPDATED: \"SESSION_STATUS_UPDATED\"\n};\n","export const PublicCommands = {\n  SHOW_LOGIN_MODAL: \"SHOW_LOGIN_MODAL\",\n  PERFORM_USER_LOGOUT: \"PERFORM_USER_LOGOUT\"\n};\n","export const Commands = {\n  UPDATE_LOGIN_MODAL_VISIBILITY: \"UPDATE_LOGIN_MODAL_VISIBILITY\",\n\n  AUTHENTICATE_USER: \"AUTHENTICATE_USER\",\n};\n","const RPC_FAKE_DELAY = 1000;\n\nconst FAKE_ACCOUNT = {\n  username: 'MichaelJordan23',\n  password: 'air23'\n}\nexport const authenticate = (username, password) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if(username === FAKE_ACCOUNT.username && password === FAKE_ACCOUNT.password) {\n        resolve({ status: \"ok\", jwt: \"fake.jwt.token\" });\n      } else {\n        resolve({ status: \"ko\", message: \"wrong credentials\" });\n      }\n    }, RPC_FAKE_DELAY);\n  });\n};\n","import { Commands } from \"../verbs/commands\";\nimport { Events } from \"../verbs/events\";\nimport * as MockAPI from \"../api/mockApi\";\n\nexport const cmdHideLoginScreenHandler = {\n  command: Commands.UPDATE_LOGIN_MODAL_VISIBILITY,\n  handler: ({ state, payload }, { triggerEvents }) =>\n    triggerEvents([{ id: Events.LOGIN_MODAL_VISIBILITY_UPDATED, payload }])\n};\n\nexport const cmdAuthenticateUserHandler = {\n  command: Commands.AUTHENTICATE_USER,\n  handler: async ({ state, payload }, { triggerEvents, rejectCommand }) => {\n    const { username, password } = payload;\n    const authenticationResult = await MockAPI.authenticate(username, password);\n    let events = [];\n    const { status } = authenticationResult;\n    if (status === \"ok\") {\n      const { jwt } = authenticationResult;\n      events = events.concat([\n        {\n          id: Events.USER_SUCCESSFULLY_AUTHENTICATED,\n          payload: { jwt, username }\n        }\n      ]);\n    }\n    if(status === 'ko') {\n      rejectCommand('Authentication failed', authenticationResult.message)\n      return;\n    }\n\n    triggerEvents(events)\n  }\n};\n\nexport const cmdHandlers = [\n  cmdHideLoginScreenHandler,\n  cmdAuthenticateUserHandler\n];\n","import { Events } from \"../verbs/events\";\n\nexport const evtUpdateLoginModalVisibilityHandler = {\n  command: Events.LOGIN_MODAL_VISIBILITY_UPDATED,\n  handler: ({ state, payload }, { updateState }) => {\n    updateState({\n      ...state,\n      loginModalVisible: payload.show\n    })\n  }\n};\n\nexport const evtLoginModalRequestedHandler = {\n  command: Events.LOGIN_MODAL_REQUESTED,\n  handler: ({ state, payload }, { triggerEvents }) => {\n    triggerEvents([\n      { id: Events.LOGIN_MODAL_VISIBILITY_UPDATED, payload: { show: true } }\n    ])\n  }\n};\n\nexport const evtLogoutUserRequestedHandler = {\n  command: Events.LOGOUT_USER_REQUESTED,\n  handler: ({ state, payload }, { triggerEvents, updateState, broadcastEvent }) => {\n    broadcastEvent(Events.SESSION_STATUS_UPDATED, {\n      userLogged: false,\n    });\n    updateState({\n      ...state,\n      userLogged: false,\n      jwt: null,\n      username: null\n    })\n    triggerEvents([{\n      id: Events.SESSION_STATUS_UPDATED,\n      payload: {\n        userLoggedIn: false,\n      }\n    }])\n  }\n};\n\nexport const evtUserSuccessfullyAuthenticatedHandler = {\n  command: Events.USER_SUCCESSFULLY_AUTHENTICATED,\n  handler: ({ state, payload }, { triggerEvents, updateState, broadcastEvent }) => {\n    const { jwt, username } = payload;\n\n    broadcastEvent(Events.SESSION_STATUS_UPDATED, {\n      userLogged: true,\n      username\n    });\n    updateState({\n      ...state,\n      userLogged: true,\n      loginModalVisible: false,\n      jwt,\n      username\n    })\n    triggerEvents([{\n      id: Events.SESSION_STATUS_UPDATED,\n      payload: {\n        userLogged: true,\n        username\n      }\n    }]) \n  }\n};\n\nexport const evtHandlers = [\n  evtUpdateLoginModalVisibilityHandler,\n  evtLoginModalRequestedHandler,\n  evtUserSuccessfullyAuthenticatedHandler,\n  evtLogoutUserRequestedHandler\n];\n","import { AGGREGATE_NAME } from \"./index\";\nimport { Commands } from \"./verbs/commands\";\nimport { Subway } from \"@subway-js/subway-react\";\n\nexport const showLoginScreen = () => {\n  Subway.selectAggregate(AGGREGATE_NAME).command(\n    Commands.UPDATE_LOGIN_MODAL_VISIBILITY,\n    { show: true }\n  );\n};\n\nexport const hideLoginScreen = () => {\n  Subway.selectAggregate(AGGREGATE_NAME).command(\n    Commands.UPDATE_LOGIN_MODAL_VISIBILITY,\n    { show: false }\n  );\n};\n\nexport const simulateLogin = (username, password, onRejected) => {\n  Subway.selectAggregate(AGGREGATE_NAME).command(\n    Commands.AUTHENTICATE_USER,\n    { username, password },\n    onRejected\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Header, Icon, Modal, Form } from \"semantic-ui-react\";\nimport { useObserveAggregateState } from \"@subway-js/subway-react\";\nimport {\n  hideLoginScreen,\n  simulateLogin\n} from \"../../commandCreators\";\n\nexport function LoginModal() {\n  const [authInProgress, setAuthInProgress] = useState(false);\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n  const [isLoginModalVisible] = useObserveAggregateState(\n    \"SessionAggregate\",\n    aggregateState => aggregateState.loginModalVisible\n  );\n\n  useEffect(() => {\n    setAuthInProgress(false);\n    setWrongCredentials(false);\n  }, [isLoginModalVisible]);\n\n  return (\n    <Modal\n      open={isLoginModalVisible}\n      dimmer=\"blurring\"\n      size=\"small\"\n      onClose={() => hideLoginScreen()}\n    >\n      {!wrongCredentials && <Header color=\"teal\" icon=\"user\" content=\"Enter your credentials\" />}\n      {wrongCredentials && <Header color=\"red\" icon=\"user\" content=\"Wrong credentials: try again\" />}\n\n      <Modal.Content>\n        <Form>\n          <Form.Field>\n            <Form.Input disabled value=\"testuser\" label=\"Enter Username\" />\n          </Form.Field>\n          <Form.Field>\n            <Form.Input\n              disabled\n              value=\"password\"\n              label=\"Enter Password\"\n              type=\"password\"\n            />\n          </Form.Field>\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          disabled={authInProgress}\n          color=\"grey\"\n          onClick={() => hideLoginScreen()}\n        >\n          <Icon name=\"cancel\" /> Cancel\n        </Button>\n\n        <Button\n          loading={authInProgress}\n          disabled={authInProgress}\n          color=\"teal\"\n          onClick={() => {\n            setAuthInProgress(true);\n            simulateLogin(\"MichaelJordan23\", \"wrongPassword\", ({ reasonString, meta }) => {\n              setWrongCredentials(true);\n              setAuthInProgress(false);\n            });\n          }}\n        >\n          <Icon name=\"checkmark\" /> Simulate wrong credentials\n        </Button>\n\n        <Button\n          loading={authInProgress}\n          disabled={authInProgress}\n          color=\"teal\"\n          onClick={() => {\n            setAuthInProgress(true);\n            simulateLogin(\"MichaelJordan23\", \"air23\");\n          }}\n        >\n          <Icon name=\"checkmark\" /> Simulate Successful Login\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import { Subway } from \"@subway-js/subway-react\";\nimport { Events } from \"./verbs/events\"; \nimport { PublicCommands } from \"./verbs/public\";\n\nimport { cmdHandlers } from \"./handlers/commands\";\nimport { evtHandlers } from \"./handlers/events\";\n\nexport const AGGREGATE_NAME = \"SessionAggregate\";\nexport const initialState = {\n  userLogged: false,\n  loginModalVisible: false,\n  jwt: null,\n  username: null\n};\n\nexport const aggregateConfig = {\n  name: AGGREGATE_NAME,\n  initialState,\n  cmdHandlers,\n  evtHandlers,\n  bootstrap: () => {\n    Subway.selectAggregate(AGGREGATE_NAME).publicChannel().reactToCommand(\n      PublicCommands.SHOW_LOGIN_MODAL,\n      ({ payload }, { triggerEvents }) => {\n        triggerEvents([\n            {\n              id: Events.LOGIN_MODAL_REQUESTED\n            }\n          ])\n      }\n    );\n\n    Subway.selectAggregate(AGGREGATE_NAME).publicChannel().reactToCommand(\n      PublicCommands.PERFORM_USER_LOGOUT,\n      ({ payload }, { triggerEvents }) => {\n        triggerEvents([\n            {\n              id: Events.LOGOUT_USER_REQUESTED\n            }\n          ])\n      }\n    );\n  }\n};\n\nexport { LoginModal } from \"./ui/containers/loginModal\";\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { useObserveAggregateState } from \"@subway-js/subway-react\";\n\nimport { Navbar, Breadcrumbs } from \"./aggregates/navigation\";\nimport { ProductList, ProductDetails, Disclaimer } from \"./aggregates/products\";\nimport { Checkout, HeaderShoppingCartDropdown } from \"./aggregates/shoppingCart\";\n\nimport { LoginModal } from \"./aggregates/session\";\nfunction App() {\n  const [currentPage] = useObserveAggregateState(\n    \"NavigationAggregate\",\n    aggregateState => aggregateState.currentPage\n  );\n\n  return (\n    <div style={{ background: \"#f8f9fa\" }}>\n      <Container>\n        <LoginModal />\n        <Navbar shoppingCartMenuItem={<HeaderShoppingCartDropdown />} />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Breadcrumbs />\n        <br />\n        <br />\n        {(!currentPage || currentPage === \"home\") && <ProductList />}\n        {currentPage === \"product\" && <ProductDetails />}\n        {currentPage === \"checkout\" && <Checkout />}\n\n        <Disclaimer />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Subway } from \"@subway-js/subway-react\";\n\nexport const initHandlers = (aggregate, cmdHandlers, evtHandlers) => {\n  cmdHandlers &&\n    cmdHandlers.forEach(({ command, handler, onError = null }) => {\n      aggregate.reactToCommand(command, handler, onError);\n    });\n  evtHandlers &&\n    evtHandlers.forEach(({ command, handler, onError = null }) => {\n      aggregate.reactToEvent(command, handler, onError);\n    });\n};\n\n// NOTE provide helper in the library itself?\nexport const initAggregates = aggregates => {\n  aggregates.forEach(\n    ({ name, initialState = {}, cmdHandlers = [], evtHandlers = []}) => {\n      const _agg = Subway.createAggregate(name, initialState);\n      initHandlers(_agg, cmdHandlers, evtHandlers);\n    }\n  );\n  aggregates.forEach(({ bootstrap = () => {} }) => bootstrap());\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { initAggregates } from \"./subwayUtils\";\nimport { aggregateConfig as productAggregateConfig } from \"./aggregates/products\";\nimport { aggregateConfig as navigationAggregateConfig } from \"./aggregates/navigation\";\nimport { aggregateConfig as shoppingCartAggregateConfig } from \"./aggregates/shoppingCart\";\nimport { aggregateConfig as sessionAggregateConfig } from \"./aggregates/session\";\n\n// TODO move to SubwayJS utils?\ninitAggregates([\n  sessionAggregateConfig,\n  productAggregateConfig,\n  navigationAggregateConfig,\n  shoppingCartAggregateConfig\n]);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}